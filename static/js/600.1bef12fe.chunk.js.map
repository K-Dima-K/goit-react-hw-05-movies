{"version":3,"file":"static/js/600.1bef12fe.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-05-movies/./src/components/MoviesList/MoviesList.module.css?de3d","components/MoviesList/MoviesList.jsx","webpack://goit-react-hw-05-movies/./src/components/SearchForm/SearchForm.module.css?d6f1","components/SearchForm/SearchForm.jsx","pages/Movies/Movies.jsx","shared/servises/Api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"MoviesList_list__0Owr9\",\"link\":\"MoviesList_link__8rTGX\"};","import PropTypes from 'prop-types';\nimport { memo } from 'react';\n\nimport { Link, useLocation } from 'react-router-dom';\n\nimport css from './MoviesList.module.css';\n\nconst MoviesList = ({ movies }) => {\n  const location = useLocation();\n\n  const elements = movies.map(({ title, id }) => (\n    <li key={id} className={css.item}>\n      <Link\n        className={css.link}\n        state={{ from: location }}\n        to={`/movies/${id}`}\n      >\n        {title}\n      </Link>\n    </li>\n  ));\n\n  return (\n    <>\n      <ul className={css.list}>{elements}</ul>\n    </>\n  );\n};\n\nexport default memo(MoviesList);\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n    })\n  ),\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"SearchForm_wrapper__JqfAl\",\"input\":\"SearchForm_input__HOxJo\",\"button\":\"SearchForm_button__UXY06\"};","import PropTypes from 'prop-types';\n\nimport { useState } from 'react';\n// import { GoSearch } from 'react-icons/go';\n\nimport css from './SearchForm.module.css';\n\nconst SearchForm = ({ onSubmit }) => {\n  const [search, setSearch] = useState('');\n\n  const handleChange = e => setSearch(e.target.value);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit(search);\n    setSearch('');\n  };\n\n  return (\n    <form className={css.wrapper} onSubmit={handleSubmit}>\n      <input\n        name=\"search\"\n        value={search}\n        required\n        placeholder=\"Search movie\"\n        className={css.input}\n        onChange={handleChange}\n      />\n      <button type=\"submit\" className={css.button}>\n        Search\n      </button>\n    </form>\n  );\n};\n\nexport default SearchForm;\n\nSearchForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\n// import { ToastContainer, toast } from 'react-toastify';\n// import 'react-toastify/dist/ReactToastify.css';\n\nimport { MovieSearch } from '../../shared/servises/Api';\nimport Loader from '../../shared/components/Loader/Loader';\nimport SearchForm from 'components/SearchForm/SearchForm';\nimport MoviesList from 'components/MoviesList/MoviesList';\n\nconst Movies = () => {\n  const [movies, setMovie] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query');\n\n  useEffect(() => {\n    if (!query) {\n      return;\n    }\n\n    const fetchMovie = async () => {\n      try {\n        setLoading({ loading: true });\n        const results = await MovieSearch(query);\n\n        setMovie(results);\n      } catch ({ response }) {\n        setError(response.data.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchMovie();\n  }, [query]);\n\n  const chanceSearch = query => {\n    setSearchParams({ query });\n  };\n\n  return (\n    <>\n      <SearchForm onSubmit={chanceSearch} />\n      {loading && <Loader />}\n      {error && <p>{error}</p>}\n      {movies && <MoviesList movies={movies} />}\n    </>\n  );\n};\n\nexport default Movies;\n\n// const Movies = () => {\n//   return <h1>Movies</h1>;\n// };\n\n// export default Movies;\n","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: '7f6b82d6e6301d2c74dd8fbee3405c81',\n  },\n});\n\nexport const filmsSearch = async (page = 1) => {\n  const { data } = await instance.get('/trending/movie/day?', {\n    params: {\n      page,\n    },\n  });\n  return data.results;\n};\n\nexport const getMovieDetails = async movieId => {\n  const { data } = await instance.get(`/movie/${movieId}?`);\n  return data;\n};\n\nexport const MovieSearch = async query => {\n  const { data } = await instance.get('/search/movie?', {\n    params: {\n      query,\n    },\n  });\n  return data.results;\n};\n\nexport const getMovieCast = async movieId => {\n  const { data } = await instance.get(`/movie/${movieId}/credits?`);\n  return data.cast;\n};\n\nexport const getReviews = async movieId => {\n  const { data } = await instance.get(`/movie/${movieId}//reviews?`);\n  return data.results;\n};\n"],"names":["MoviesList","movies","location","useLocation","elements","map","title","id","className","css","state","from","to","memo","defaultProps","onSubmit","useState","search","setSearch","e","preventDefault","name","value","required","placeholder","onChange","target","type","setMovie","loading","setLoading","error","setError","useSearchParams","searchParams","setSearchParams","query","get","useEffect","fetchMovie","MovieSearch","results","response","data","message","Loader","instance","axios","baseURL","params","api_key","filmsSearch","page","getMovieDetails","movieId","getMovieCast","cast","getReviews"],"sourceRoot":""}
{"version":3,"file":"static/js/866.2da02f1f.chunk.js","mappings":"+PACA,GAAiB,E,SCMXA,EAAU,WACd,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,SAERE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,sGAEdN,GAAW,GAFG,UAGQO,EAAAA,EAAAA,IAAWJ,GAHnB,OAGRK,EAHQ,OAKdV,EAAUU,GALI,gDAMLC,EANK,KAMLA,SACTP,EAASO,EAASC,KAAKC,SACvBC,MAAM,SAAD,OAAUX,IARD,yBAUdD,GAAW,GAVG,4EAAH,qDAcfM,GACD,GAAE,CAACH,EAASF,IAEb,IAAMY,EAAUhB,EAAOiB,KAAI,gBAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,GAAIC,EAAhB,EAAgBA,OAAhB,OACzB,gBAAaC,UAAWC,EAAAA,KAAxB,WACE,wBAAKF,KACL,uBAAIF,MAFGC,EADgB,IAO3B,OACE,gCACGjB,IAAW,SAACqB,EAAA,EAAD,IACXvB,EAAOwB,OAAS,GACf,gBAAKH,UAAWC,EAAAA,QAAhB,UACE,eAAID,UAAWC,EAAAA,KAAf,SAA0BN,OAG5B,uDAIP,EAED,GAAeS,EAAAA,EAAAA,MAAK3B,E,sLClDd4B,E,OAAWC,EAAAA,OAAa,CAC5BC,QAAS,+BACTC,OAAQ,CACNC,QAAS,sCAIAC,EAAW,mCAAG,2GAAOC,EAAP,+BAAc,EAAd,SACFN,EAASO,IAAI,uBAAwB,CAC1DJ,OAAQ,CACNG,KAAAA,KAHqB,uBACjBnB,EADiB,EACjBA,KADiB,kBAMlBA,EAAKF,SANa,2CAAH,qDASXuB,EAAe,mCAAG,WAAM5B,GAAN,yFACNoB,EAASO,IAAT,iBAAuB3B,EAAvB,MADM,uBACrBO,EADqB,EACrBA,KADqB,kBAEtBA,GAFsB,2CAAH,sDAKfsB,EAAW,mCAAG,WAAMC,GAAN,yFACFV,EAASO,IAAI,iBAAkB,CACpDJ,OAAQ,CACNO,MAAAA,KAHqB,uBACjBvB,EADiB,EACjBA,KADiB,kBAMlBA,EAAKF,SANa,2CAAH,sDASX0B,EAAY,mCAAG,WAAM/B,GAAN,yFACHoB,EAASO,IAAT,iBAAuB3B,EAAvB,cADG,uBAClBO,EADkB,EAClBA,KADkB,kBAEnBA,EAAKyB,MAFc,2CAAH,sDAKZ5B,EAAU,mCAAG,WAAMJ,GAAN,yFACDoB,EAASO,IAAT,iBAAuB3B,EAAvB,eADC,uBAChBO,EADgB,EAChBA,KADgB,kBAEjBA,EAAKF,SAFY,2CAAH,qD","sources":["pages/Reviews/Reviews.module.css","pages/Reviews/Reviews.jsx","shared/servises/Api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {};","import { useState, useEffect, memo } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport Loader from 'shared/components/Loader/Loader';\nimport { getReviews } from '../../shared/servises/Api';\nimport css from './Reviews.module.css';\n\nconst Reviews = () => {\n  const [movies, setMovies] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const fetchCast = async () => {\n      try {\n        setLoading(true);\n        const results = await getReviews(movieId);\n\n        setMovies(results);\n      } catch ({ response }) {\n        setError(response.data.message);\n        alert(`Sorry,${error}`);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchCast();\n  }, [movieId, error]);\n\n  const element = movies.map(({ content, id, author }) => (\n    <li key={id} className={css.item}>\n      <h4>{author}</h4>\n      <p>{content}</p>\n    </li>\n  ));\n\n  return (\n    <>\n      {loading && <Loader />}\n      {movies.length > 0 ? (\n        <div className={css.wrapper}>\n          <ul className={css.list}>{element}</ul>\n        </div>\n      ) : (\n        <p>Sorry, reviews not found.</p>\n      )}\n    </>\n  );\n};\n\nexport default memo(Reviews);\n","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: '7f6b82d6e6301d2c74dd8fbee3405c81',\n  },\n});\n\nexport const filmsSearch = async (page = 1) => {\n  const { data } = await instance.get('/trending/movie/day?', {\n    params: {\n      page,\n    },\n  });\n  return data.results;\n};\n\nexport const getMovieDetails = async movieId => {\n  const { data } = await instance.get(`/movie/${movieId}?`);\n  return data;\n};\n\nexport const MovieSearch = async query => {\n  const { data } = await instance.get('/search/movie?', {\n    params: {\n      query,\n    },\n  });\n  return data.results;\n};\n\nexport const getMovieCast = async movieId => {\n  const { data } = await instance.get(`/movie/${movieId}/credits?`);\n  return data.cast;\n};\n\nexport const getReviews = async movieId => {\n  const { data } = await instance.get(`/movie/${movieId}//reviews?`);\n  return data.results;\n};\n"],"names":["Reviews","useState","movies","setMovies","loading","setLoading","error","setError","movieId","useParams","useEffect","fetchCast","getReviews","results","response","data","message","alert","element","map","content","id","author","className","css","Loader","length","memo","instance","axios","baseURL","params","api_key","filmsSearch","page","get","getMovieDetails","MovieSearch","query","getMovieCast","cast"],"sourceRoot":""}